<?xml version='1.0' encoding='UTF-8'?>

<!-- CHANGE: Use machine id as slave name -->
<host xmlns="urn:jboss:domain:1.7" name="wildfly-slave-{{ansible_machine_id}}">
    <!-- CHANGE: Add the vault -->
    <vault>
        <vault-option name="KEYSTORE_URL" value="{{wildfly_install_dir}}/vault.keystore"/>
        <vault-option name="KEYSTORE_PASSWORD" value="{{masked_vault_password}}"/>
        <vault-option name="KEYSTORE_ALIAS" value="vault"/>
        <vault-option name="SALT" value="{{salt}}"/>
        <vault-option name="ITERATION_COUNT" value="50"/>
        <vault-option name="ENC_FILE_DIR" value="{{wildfly_install_dir}}/vault/"/>
    </vault>
    <management>
        <security-realms>
            <security-realm name="ManagementRealm">
                <server-identities>
                    <!-- CHANGE: Add the slave password -->
                    <secret value="${VAULT::MyVault::wildfly_slave_password::1}"/>
                </server-identities>

                <authentication>
                    <local default-user="$local" skip-group-loading="true"/>
                    <properties path="mgmt-users.properties" relative-to="jboss.domain.config.dir"/>
                </authentication>
                <authorization map-groups-to-roles="false">
                    <properties path="mgmt-groups.properties" relative-to="jboss.domain.config.dir"/>
                </authorization>                
            </security-realm>
            <security-realm name="ApplicationRealm">
                <authentication>
                    <local default-user="$local" allowed-users="*" skip-group-loading="true" />
                    <properties path="application-users.properties" relative-to="jboss.domain.config.dir" />
                </authentication>
                <authorization>
                    <properties path="application-roles.properties" relative-to="jboss.domain.config.dir"/>
                </authorization>
            </security-realm>
        </security-realms>
        <audit-log>
            <formatters>
                <json-formatter name="json-formatter"/>
            </formatters>
            <handlers>
                <file-handler name="host-file" formatter="json-formatter" relative-to="jboss.domain.data.dir" path="audit-log.log"/>
                <file-handler name="server-file" formatter="json-formatter" relative-to="jboss.server.data.dir" path="audit-log.log"/>
            </handlers>
            <logger log-boot="true" log-read-only="false" enabled="false">
                <handlers>
                    <handler name="host-file"/>
                </handlers>
            </logger>
            <server-logger log-boot="true" log-read-only="false" enabled="false">
                <handlers>
                    <handler name="server-file"/>
                </handlers>
            </server-logger>
        </audit-log>
        <management-interfaces>
            <native-interface security-realm="ManagementRealm">
                <socket interface="management" port="${jboss.management.native.port:{{wildfly_domainslavemanagement_native_port}}}"/>
            </native-interface>
        </management-interfaces>
    </management>

    <domain-controller>
        <!-- CHANGE: Connect to the local DC -->
        <remote security-realm="ManagementRealm" username="{{wildfly_slave_username}}">
            <discovery-options>
                {% if ansible_ip_addresses is defined %}
                <static-discovery name="primary" host="${jboss.domain.master.address:localhost}" port="${jboss.domain.master.port:{{wildfly_domaincontroller_management_native_port}}}"/>
                {% else %}
                <static-discovery name="primary" host="${jboss.domain.master.address:localhost}" port="${jboss.domain.master.port:{{wildfly_domaincontroller_management_native_port}}}"/>
                {% endif %}
            </discovery-options>
        </remote>
    </domain-controller>

    <interfaces>
        <interface name="management">
            <!-- CHANGE: Bind to any IP address -->
            <any-address/>
        </interface>
        <interface name="public">
            <!-- CHANGE: Bind to any IP address -->
            <any-address/>
        </interface>
        <interface name="unsecure">
            <!-- Used for IIOP sockets in the standard configuration.
                 To secure JacORB you need to setup SSL -->
            <inet-address value="${jboss.bind.address.unsecure:127.0.0.1}"/>
        </interface>
    </interfaces>

    <jvms>
   	   <jvm name="default">
            <heap size="64m" max-size="256m"/>
            <permgen size="256m" max-size="256m"/>
              <jvm-options>
                  <option value="-server"/>
              </jvm-options>
         </jvm>
   	</jvms>

    <servers>
        <!-- CHANGE: Add port offset -->
        <server name="server-one" group="main-server-group">
            <socket-bindings port-offset="{{wildfly_slave_port_offset}}"/>
        </server>
        <server name="server-two" group="other-server-group">
            <!-- server-two avoids port conflicts by incrementing the ports in
                 the default socket-group declared in the server-group -->
            <socket-bindings port-offset="{{wildfly_slave_port_offset2}}"/>
        </server>
    </servers>
</host>
