#!/bin/sh

### BEGIN INIT INFO
# Provides:          liberty7
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Should-Start:      $named
# Should-Stop:       $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Liberty.
# Description:       Start the Liberty application server.
### END INIT INFO

#license
#----------------------------------
# Copyright 2010 Michael C Smith <maxomai@gmail.com>. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, are
# permitted provided that the following conditions are met:
#
#   1. Redistributions of source code must retain the above copyright notice, this list of
#      conditions and the following disclaimer.
#
#   2. Redistributions in binary form must reproduce the above copyright notice, this list
#      of conditions and the following disclaimer in the documentation and/or other materials
#      provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation are those
# of the authors and should not be interpreted as representing official policies,
# either expressed or implied, of any project or employer for whom the author works.
#----------------------------------

#set up logging
#----------------------------------

writelog() {
	echo [`date`] $1 >> /tmp/webspherelog.log
}

writelog "Begin Websphere script"

#verify user
#----------------------------------
writelog "Verify user"
USERID=`id -u`
if [ $USERID -ne 0 ]; then
	echo "This script can only be run as root."
	writelog "Abend: wrong user"
	exit 1
fi
writelog "User verified"

#set constants, environment
#----------------------------------
writelog "Loading constants"
export HOME=/root
SERVERNAME="octopus"
WASBINDIR="/opt/wlp/bin"
SERVERBIN="$WASBINDIR/server"

#define functions
#----------------------------------

writelog "Loading start script"
wasstart()
{
		writelog "start script started"
	    sudo $SERVERBIN start $SERVERNAME
		writelog "start script complete"
}

writelog "Loading stop script"
wasstop()
{
		writelog "stop script started"
	    sudo $SERVERBIN stop $SERVERNAME
		writelog "stop script complete"
}

writelog "Loading check start exec script"
checkstart()
{
    writelog "checkstart script started"
	if [ ! -x $SERVERBIN ]; then
		echo "$SERVERBIN not installed"
		exit 1
	fi
    writelog "checkstart script completed ok"
}


#parse args and act accordingly
#----------------------------------
writelog "Parsing args"
ARG=$1

[ -z "$ARG" ] && ARG=usage

case $ARG in

	start)
		writelog "Arg: Start"
		checkstart
		wasstart
	;;

	stop)
		writelog "Arg: Stop"
		checkstart
		wasstop
	;;

	restart)
		writelog "Arg: restart"
		checkstart
		echo "Restarting WebSphere Application Server"
		wasstop
		wasstart
	;;

	*)
		writelog "Arg: other"
		echo "Usage: $0 (start|stop|restart)"
	;;
esac

